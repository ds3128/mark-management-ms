version: '3.8'

services:
  discovery-service:
    container_name: discovery-service
    build:
      context: discovery-service
      dockerfile: Dockerfile
    ports:
      - '8761:8761'
    expose:
      - '8761'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      retries: 4

  config-service:
    container_name: config-service
    build:
      context: config-service
      dockerfile: Dockerfile
    ports:
      - '9999:9999'
    expose:
      - '9999'
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9999/actuator/health" ]
      interval: 10s
      retries: 4
    depends_on:
      discovery-service:
        condition: service_healthy

  course-database:
    container_name: course-database
    image: postgres:16
    ports:
      - '5432:5432'
    expose:
      - '5432'
    environment:
      POSTGRES_USER: course_spring
      POSTGRES_PASSWORD: course_spring
      POSTGRES_DB: course_spring
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U course_spring -d course_spring'"]
      interval: 10s
      timeout: 5s
      retries: 4

  adminer-course:
    container_name: adminer-course
    image: adminer:4.8.0-standalone
    restart: always
    ports:
      - "9081:8080"
    expose:
      - '9081'

  course-service:
    container_name: course-service
    build:
      context: course-service
      dockerfile: Dockerfile
    ports:
      - '8038:8038'
    expose:
      - '8038'
    environment:
      - CONFIG_SERVICE=http://config-service:9999
      - SPRING_DATASOURCE_URL=jdbc:postgresql://course-database:5432/course_spring?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=course_spring
      - SPRING_DATASOURCE_PASSWORD=course_spring
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
    depends_on:
      config-service:
        condition: service_healthy
      course-database:
        condition: service_healthy

  field-database:
    container_name: field-database
    image: mysql:latest
    environment:
      MYSQL_DATABASE: field-db
      MYSQL_USER: ds3128
      MYSQL_PASSWORD: 12345
      MYSQL_ROOT_PASSWORD: admin
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent" ]
      interval: 10s
      timeout: 5s
      retries: 4
    ports:
      - '3306:3306'
    expose:
      - '3306'

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    restart: always
    ports:
      - '9998:80'
    environment:
      PMA_HOST: field-database
      PMA_PORT: 3306
      PMA_ARBITRARY: 1

  field-study-service:
    container_name: field-study-service
    build:
      context: fieldStudy-service
      dockerfile: Dockerfile
    ports:
      - '8036:8036'
    expose:
      - '8036'
    environment:
      - CONFIG_SERVICE=http://config-service:9999
      - SPRING_DATASOURCE_URL=jdbc:mysql://field-database:3306/field-db?CreateDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=ds3128
      - SPRING_DATASOURCE_PASSWORD=12345
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
    depends_on:
      config-service:
        condition: service_healthy
      field-database:
        condition: service_healthy

  user-database:
    container_name: user-database
    image: postgres:16
    restart: always
    ports:
      - '5433:5433'
    expose:
      - '5433'
    environment:
      POSTGRES_USER: user_spring
      POSTGRES_PASSWORD: user_spring
      POSTGRES_DB: user_spring
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U user_spring -d user_spring'" ]
      interval: 10s
      timeout: 5s
      retries: 4

  pgadmin_user:
    container_name: pgadmin_user
    image: 'dpage/pgadmin4:latest'
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: dariussteves@yahoo.fr
      PGADMIN_DEFAULT_PASSWORD: 12345
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - '5050:5050'
    expose:
      - '5050'

  user-service:
    container_name: user-service
    build:
      context: user-service
      dockerfile: Dockerfile
    ports:
      - '8037:8037'
    expose:
      - '8037'
    environment:
      - CONFIG_SERVICE=http://config-service:9999
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-database:5432/user_spring?createDatabaseIfNotExist=true
      - SPRING_DATASOURCE_USERNAME=user_spring
      - SPRING_DATASOURCE_PASSWORD=user_spring
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
    depends_on:
      config-service:
        condition: service_healthy
      user-database:
        condition: service_healthy

  gateway-service:
    container_name: gateway-service
    build:
      context: gateway-service
      dockerfile: Dockerfile
    ports:
      - '8888:8888'
    expose:
      - '8888'
    environment:
      - CONFIG_SERVICE=http://config-service:9999
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka
    depends_on:
      config-service:
        condition: service_healthy


